"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.InfiniteScroll = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _clsx = _interopRequireDefault(require("clsx"));

var _excluded = ["className", "disabled", "distance", "children", "onLoadMore"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var InfiniteScroll = function InfiniteScroll(props) {
  var className = props.className,
      disabled = props.disabled,
      _props$distance = props.distance,
      distance = _props$distance === void 0 ? 0 : _props$distance,
      children = props.children,
      onLoadMore = props.onLoadMore,
      other = (0, _objectWithoutProperties2.default)(props, _excluded);
  var wrapperRef = (0, _react.useRef)(null);

  function handleScroll() {
    var el = wrapperRef.current;
    var nearBottom = el.scrollHeight - el.scrollTop - el.clientHeight <= distance;

    if (nearBottom) {
      onLoadMore();
    }
  }

  return /*#__PURE__*/_react.default.createElement("div", (0, _extends2.default)({
    className: (0, _clsx.default)('InfiniteScroll', className),
    role: "feed",
    onScroll: !disabled ? handleScroll : undefined,
    ref: wrapperRef
  }, other), children);
};

exports.InfiniteScroll = InfiniteScroll;