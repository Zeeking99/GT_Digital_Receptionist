{"ast":null,"code":"import React from\"react\";import Chat,{Bubble,useMessages}from\"@chatui/core\";import\"@chatui/core/dist/index.css\";import\"./index.css\";import SplitPane from\"react-split-pane\";//import ChatSDK from \"@chatui/core\";\n//import './chatui-theme.css';\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var initialMessages=[{type:'text',content:{text:'Welcome to Digital Receptionist Sam'},user:{avatar:'http://127.0.0.1:5500/gui/src/logo.svg'}}];export default function App(){var _useMessages=useMessages(initialMessages),messages=_useMessages.messages,appendMsg=_useMessages.appendMsg,setTyping=_useMessages.setTyping;function handleSend(type,val){if(type===\"text\"&&val.trim()){appendMsg({type:\"text\",content:{text:val},position:\"right\",user:{avatar:'http://127.0.0.1:5500/gui/src/user.svg'}});setTyping(true);setTimeout(function(){appendMsg({type:\"text\",content:{text:\"YaYa\"},user:{avatar:'http://127.0.0.1:5500/gui/src/logo.svg'}});},1000);}}function renderMessageContent(msg){var content=msg.content;return/*#__PURE__*/_jsx(Bubble,{content:content.text});}/*\n  new ChatSDK({\n    config: {\n      toolbar: [\n        {\n          type: 'speech',\n          icon: 'mic',\n          title: '语音输入'\n        }\n      ]\n    },\n    handlers: {\n      onToolbarClick: function (item, ctx) {\n        if (item.type === 'speech') {\n          // 这里改成 App 提供的 bridge 方法\n          nativeInvoke('speech', (text) => {\n            if (text) {\n              // 通过 setText 更新输入框内容\n              bot.appRef.current.setText(text);\n            }\n          });\n        }\n      }\n    }\n  });\n*/return/*#__PURE__*/_jsxs(SplitPane,{split:\"vertical\",size:950,children:[/*#__PURE__*/_jsx(\"div\",{children:\"Digital Human\"}),/*#__PURE__*/_jsx(SplitPane,{split:\"vertical\",size:500,children:/*#__PURE__*/_jsx(Chat,{locale:\"en-US\",navbar:{title:\"Digital Receptionist Sam\"},messages:messages,renderMessageContent:renderMessageContent,onSend:handleSend})})]});}","map":{"version":3,"sources":["/home/zeekin99_project/Documents/digital_receptionist/GT_Digital_Receptionist/src/App.js"],"names":["React","Chat","Bubble","useMessages","SplitPane","initialMessages","type","content","text","user","avatar","App","messages","appendMsg","setTyping","handleSend","val","trim","position","setTimeout","renderMessageContent","msg","title"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,IAAP,EAAeC,MAAf,CAAuBC,WAAvB,KAA0C,cAA1C,CACA,MAAO,6BAAP,CACA,MAAO,aAAP,CACA,MAAOC,CAAAA,SAAP,KAAsB,kBAAtB,CACA;AACA;wFAEA,GAAMC,CAAAA,eAAe,CAAG,CACtB,CACEC,IAAI,CAAE,MADR,CAEEC,OAAO,CAAE,CAAEC,IAAI,CAAE,qCAAR,CAFX,CAGEC,IAAI,CAAE,CAAEC,MAAM,CAAE,wCAAV,CAHR,CADsB,CAAxB,CAQA,cAAe,SAASC,CAAAA,GAAT,EAAe,CAC5B,iBAA2CR,WAAW,CAACE,eAAD,CAAtD,CAAQO,QAAR,cAAQA,QAAR,CAAkBC,SAAlB,cAAkBA,SAAlB,CAA6BC,SAA7B,cAA6BA,SAA7B,CAEA,QAASC,CAAAA,UAAT,CAAoBT,IAApB,CAA0BU,GAA1B,CAA+B,CAC7B,GAAIV,IAAI,GAAK,MAAT,EAAmBU,GAAG,CAACC,IAAJ,EAAvB,CAAmC,CACjCJ,SAAS,CAAC,CACRP,IAAI,CAAE,MADE,CAERC,OAAO,CAAE,CAAEC,IAAI,CAAEQ,GAAR,CAFD,CAGRE,QAAQ,CAAE,OAHF,CAIRT,IAAI,CAAE,CAAEC,MAAM,CAAE,wCAAV,CAJE,CAAD,CAAT,CAOAI,SAAS,CAAC,IAAD,CAAT,CAEAK,UAAU,CAAC,UAAM,CACfN,SAAS,CAAC,CACRP,IAAI,CAAE,MADE,CAERC,OAAO,CAAE,CAAEC,IAAI,CAAE,MAAR,CAFD,CAGRC,IAAI,CAAE,CAAEC,MAAM,CAAE,wCAAV,CAHE,CAAD,CAAT,CAKD,CANS,CAMP,IANO,CAAV,CAOD,CACF,CAED,QAASU,CAAAA,oBAAT,CAA8BC,GAA9B,CAAmC,CACjC,GAAQd,CAAAA,OAAR,CAAoBc,GAApB,CAAQd,OAAR,CACA,mBAAO,KAAC,MAAD,EAAQ,OAAO,CAAEA,OAAO,CAACC,IAAzB,EAAP,CACD,CACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EACE,mBACE,MAAC,SAAD,EAAW,KAAK,CAAC,UAAjB,CAA4B,IAAI,CAAE,GAAlC,wBACE,sCADF,cAEA,KAAC,SAAD,EAAW,KAAK,CAAC,UAAjB,CAA4B,IAAI,CAAE,GAAlC,uBACA,KAAC,IAAD,EACE,MAAM,CAAC,OADT,CAEE,MAAM,CAAE,CAAEc,KAAK,CAAE,0BAAT,CAFV,CAGE,QAAQ,CAAEV,QAHZ,CAIE,oBAAoB,CAAEQ,oBAJxB,CAKE,MAAM,CAAEL,UALV,EADA,EAFA,GADF,CAeD","sourcesContent":["import React from \"react\";\nimport Chat, { Bubble, useMessages } from \"@chatui/core\";\nimport \"@chatui/core/dist/index.css\";\nimport \"./index.css\";\nimport SplitPane from \"react-split-pane\";\n//import ChatSDK from \"@chatui/core\";\n//import './chatui-theme.css';\n\nconst initialMessages = [\n  {\n    type: 'text',\n    content: { text: 'Welcome to Digital Receptionist Sam' },\n    user: { avatar: 'http://127.0.0.1:5500/gui/src/logo.svg'}\n  },\n];\n\nexport default function App() {\n  const { messages, appendMsg, setTyping } = useMessages(initialMessages);\n\n  function handleSend(type, val) {\n    if (type === \"text\" && val.trim()) {\n      appendMsg({\n        type: \"text\",\n        content: { text: val },\n        position: \"right\",\n        user :{ avatar: 'http://127.0.0.1:5500/gui/src/user.svg' }\n      });\n\n      setTyping(true);\n\n      setTimeout(() => {\n        appendMsg({\n          type: \"text\",\n          content: { text: \"YaYa\" },\n          user: { avatar: 'http://127.0.0.1:5500/gui/src/logo.svg' },\n        });\n      }, 1000);\n    }\n  }\n\n  function renderMessageContent(msg) {\n    const { content } = msg;\n    return <Bubble content={content.text} />;\n  }\n/*\n  new ChatSDK({\n    config: {\n      toolbar: [\n        {\n          type: 'speech',\n          icon: 'mic',\n          title: '语音输入'\n        }\n      ]\n    },\n    handlers: {\n      onToolbarClick: function (item, ctx) {\n        if (item.type === 'speech') {\n          // 这里改成 App 提供的 bridge 方法\n          nativeInvoke('speech', (text) => {\n            if (text) {\n              // 通过 setText 更新输入框内容\n              bot.appRef.current.setText(text);\n            }\n          });\n        }\n      }\n    }\n  });\n*/\n  return (\n    <SplitPane split=\"vertical\" size={950}>\n      <div>Digital Human</div>\n    <SplitPane split='vertical' size={500}>\n    <Chat\n      locale=\"en-US\"\n      navbar={{ title: \"Digital Receptionist Sam\" }}\n      messages={messages}\n      renderMessageContent={renderMessageContent}\n      onSend={handleSend}  \n    />\n    </SplitPane>\n    </SplitPane>\n    \n  );\n}\n"]},"metadata":{},"sourceType":"module"}